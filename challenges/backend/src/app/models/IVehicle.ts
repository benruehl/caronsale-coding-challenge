import { IVehicleImages } from "./IVehicleImages";
import { IVehicleImage } from "./IVehicleImage";
import { IFile } from "./IFile";
import { IVehicleDamage } from "./IVehicleDamage";
import { IVehicleValuation } from "./IVehicleValuation";

export interface IVehicle {
    vin: string;
    make: string;
    model: string;
    datBaseModelRaw: string;
    ez: string;
    mileageInKm: number;
    category: string;
    transmission: string;
    color: string;
    upholstery: string;
    fuelType: string;
    numSeats: number;
    doors: string;
    engineSizeInCcm: number;
    enginePowerInHp: number;
    dimensionWidthInCm: number;
    dimensionHeightInCm: number;
    dimensionLengthInCm: number;
    unloadedWeightInKg: number;
    lastHu: string;
    huReportExists: boolean;
    numPreOwners: number;
    numKeys: number;
    vatIdReportable: boolean;
    fullServiceHistory: boolean;
    lastCheckAtMileage: number;
    isReimportedVehicle: boolean;
    euroNorm: string;
    hadAccident: boolean;
    accidentDescription: string;
    additionalDamages: string;
    damages: IVehicleDamage[];
    isReadyToDrive: boolean;
    vehicleCondition: number;
    imageUrls: IVehicleImages;
    vehicleImages: IVehicleImage[];
    attachments: IFile[];
    urlToAttachment1: string;
    urlToAttachment2: string;
    urlToAttachment3: string;
    urlToVehicleSummarySheet: string;
    estimatedValue: number;
    vehicleValuation: IVehicleValuation;
    basedOnInternalVehicleExpertReport: boolean;
    id: number;
    ac: string;
    navigation: number;
    headlights: string;
    coupling: string;
    vehicleHeater: string;
    parkingAssistance: string;
    sunRoof: number;
    sportPackage: number;
    additional: string;
}
